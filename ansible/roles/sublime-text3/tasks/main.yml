---
# file: roles/sublime-text3/tasks/main.yml

# TODO
#   * move sublime text stuff from bash_profile to a st3 conf
#   * append st3 conf to bash_profile
#   * https://sublime.wbond.net/docs/syncing

# - debug: msg="{{ item.name }} == {{ item.val }}"
#   with_items:
#     - { name: st3_cfg_default, val: "{{ st3_cfg_default }}" }
#     - { name: st3_sys_conf_dir, val: "{{ st3_sys_conf_dir }}" }
#     - { name: st3_prefs_dir_dest, val: "{{ st3_prefs_dir_dest }}" }
#     - { name: st3_app_lib, val: "{{ st3_app_lib }}" }
#     - { name: st3_app_pkg_installed, val: "{{ st3_app_pkg_installed }}" }
#     - { name: st3_app_pkg_user, val: "{{ st3_app_pkg_user }}" }
#     - { name: st3_app_pkg_user, val: "{{ st3_app_pkg_user }}" }

- name: st3 | brew taps
  debug: msg="{{ st3_brew_taps }}"
  # homebrew_tap:
  #  name: "{{ item }}"
  #  state: present
  with_items: st3_brew_taps

# - name: st3 | taps
#  homebrew_tap:
#    name: "{{ item }}"
#    state: present
#  with_items: st3_brew.taps

- name: st3 | brew install app
  debug: msg="{{ st3_cask_formula }}"
  # homebrew_cask:
  #   name: "{{ st3_brew.formula }}"
  #   state: present

# - name: st3 | install sublime-text3
#   homebrew_cask:
#     name: "{{ st3_brew.formula }}"
#     state: present

- name: st3 | ensure required directories exists
  debug: msg="{{ item }}"
  # file:
  #   path: "{{ item }}"
  #   state: directory
  with_items:
    - st3_app_lib
    - st3_app_pkg_installed
    - st3_app_pkg_user
    - st3_project_dir

# - name: st3 | ensure paths exists
#   file:
#     path: "{{ item }}"
#     state: directory
#   with_items:
#     - st3_conf.installed_pkgs
#     - st3_conf.path
#     - st3_conf.user_pkg_path

- name: st3 | get Package Control and put in Installed Packages directory
  debug: msg="url: {{ st3_package_control.url }} dest: {{ st3_package_control.dest }}"
  # get_url:
  #   url: "{{ st3_package_control.url }}"
  #   dest: "{{ st3_package_control.dest }}"

# - name: st3 | get Package Control and put in Installed Packages directory
#   get_url:
#     url: "{{ st3_package_control.url }}"
#     dest: "{{ st3_package_control.dest }}"

- name: st3 | sync st3 preferences dir with the fs config dir
  synchronize:
    src: "{{ st3_my_prefs_src }}"
    dest: "{{ ansible_env.HOME }}/tmp"
    # dest: "{{ st3_prefs_dir_dest }}"

# - name: st3 | sync this config dir with the fs config dir
#   synchronize:
#     src: "st3_configs/"
#     dest: "{{ st3_conf.path }}"

- name: st3 | remove existing User packages dir
  debug: msg="{{ st3_app_pkg_user }}"
  # file:
  #   path: "{{ st3_app_pkg_user }}"
  #   state: absent

- name: st3 | symlink st3 preferences
  debug: msg="src: {{ st3_prefs_dir_dest }} dest: {{ st3_app_pkg_user }}"
  # file:
  #   src: "{{ st3_prefs_dir_dest }}"
  #   dest: "{{ st3_app_pkg_user }}"
  #   force: yes
  #   state: link

# - name: st3 | symlink st3 configs
#   file:
#     src: "{{ st3_conf.path }}"
#     dest: "{{ st3_conf.user_pkg_path }}"
#     force: yes
#     state: link

- name: st3 | create preferences from templates
  debug: msg="template: {{ item }}"
  # template:
  #   src: "{{ item }}.j2"
  #   dest: "{{ st3_prefs_dir_dest }}/{{ item }}"
  with_items: st3_user_pkg_templates

# - name: st3 | create configs from templates
#   template:
#     src: "{{ item }}.j2"
#     dest: "{{ st3_conf.path }}/{{ item }}"
#   with_items: st3_conf.templates

# - name: st3 | create projects dir
#   file:
#     path: "{{ item }}"
#     state: directory
#   with_items: st3_project_dirs
